
UPDATE operations SET timestamp=datetime(),name='attribute1' WHERE user_id=1 AND name='attribute1'

INSERT OR REPLACE INTO operations VALUES(1, datetime(), 'attribute2')


INSERT OR REPLACE INTO operations (user_id, name, timestamp) values ((SELECT user_id,name from operations
																	WHERE user_id=1 
																	AND name='attribute2'), 
																	datetime() )

SELECT user_id,name from operations WHERE user_id=1  AND name='attribute2'


INSERT OR REPLACE INTO operations (user_id, name, timestamp) values ((SELECT user_id from operations
																	WHERE user_id=1 
																	AND name='attribute2'), 
																	 (SELECT name from operations WHERE 
																	  user_id=1 AND name='attribute2'),
																	datetime() )


CREATE TABLE history (user_id INTEGER NOT NULL,
                            timestamp DATETIME NOT NULL, 
                            name TEXT NOT NULL,
                            type TEXT NOT NULL,
                            formula TEXT NOT NULL,
                            host TEXT DEFAULT NULL,
                            bookmark_idx INTEGER NOT NULL,
                            UNIQUE (user_id, name, type, formula,bookmark_idx) ON CONFLICT REPLACE, PRIMARY KEY(user_id,type,bookmark_idx))


insert into operations values (1, datetime(), 'att1', 'monitor')

insert into operations values (1, datetime(), 'att2', 'monitor')

insert into operations values (1, datetime(), 'att_a', 'read')

select * from operations

CREATE TABLE hosts (user_id INT PRIMARY_KEY NOT NULL, host TEXT NOT NULL,
                            UNIQUE (user_id, host) ON CONFLICT REPLACE)

insert or replace into hosts (user_id, host) VALUES(1, 'len')




# simulate subsequent updates
INSERT INTO read_history VALUES(100, datetime(), 'a/b/c/d', '10.0', 0)
INSERT INTO read_history VALUES(100, datetime(), 'a/b/c/d', '10.2', 0)
INSERT INTO read_history VALUES(100, datetime(), 'a/b/c/d', '100.2',  1)
INSERT INTO read_history VALUES(100, datetime(),'a/b/c/d', '110.2',  1)
INSERT INTO read_history VALUES(100, datetime(), 'a/b/c/d', '250.2', 2)
INSERT INTO read_history VALUES(100, datetime(), 'a/b/c/d', '260.2',  2)


procs table saves active monitors/aletrs in order to be restored if the server goes down and up again later.
Must contain all the fields necessary to restart a monitor / alert exactly as it was before:
- user and chat id
- date time started
- command (monitor|alert|...) plus source plus formula
- host






