#!/bin/bash


# the menu is printed like this
# +---------------------------------------------------------------------------------+
# |                              cumbia launcher usage:                             |
# +---------------------------------------------------------------------------------+
# |                                                                                 |
# |cumbia new project            | write a new cumbia project                       |
# |cumbia new control            | write a new cumbia control widget                |
# |cumbia ui make                | call cuuimake                                    |
# |cumbia client                 | run the cumbia generic client                    |
# |cumbia upgrade                | upgrade to a newer version of cumbia             |
# +---------------------------------------------------------------------------------+

print_menu() {

		printf "\n"
		printf "+%.24s--%.38s--%.58s+\n" "--------------------------------" "--------------------------------------------" "-----------------------------------------------------------------"
		printf "|%-24s| %-38s| %-58s|\n" "cumbia launcher options" "description" "options"
		printf "|%.24s| %.38s| %.58s|\n" "--------------------------------" "---------------------------------------------" "------------------------------------------------------------------"
		printf "|%-24s| %-38s| %-58s|\n" "" ""
		printf "|%-24s| %-38s| %-58s|\n" "cumbia new project" "write a new cumbia project" ""
		printf "|%-24s| %-38s| %-58s|\n" "cumbia new control" "write a new cumbia control widget"
		printf "|%-24s| %-38s| %-58s|\n" "cumbia import" "try to migrate a qtango project" ""
		printf "|%-24s| %-38s| %-58s|\n" "cumbia import fast" "as above, proceed in the current dir" ""
		printf "|%-24s| %-38s| %-58s|\n" "cumbia ui make" "call cuuimake" "[--help] | [--clean] | [--pre-clean | --qmake | --make]"
		printf "|%-24s| %-38s| %-58s|\n" "cumbia client" "run the cumbia generic client" "list of sources: test/device/1 [a/src/2 source:ai1]"
		printf "|%-24s| %-38s| %-58s|\n" "cumbia upgrade" "upgrade to a newer version of cumbia" ""
		printf "+%.24s--%.38s--%.58s+\n" "--------------------------------" "--------------------------------------------" "--------------------------------------------------------------------"
		printf "\n"
}

conf_f=$HOME/.config/cumbia/srcupdate.conf

if [ $# -lt 1 ]; then
#	print_menu
        echo "$#"

elif [ $# -gt 1 ] && [ $1 == "new" ] && [ $2 == "project" ]; then
        qumbiaprojectwizard ${@:3}
elif [ $# -gt 1 ] && [ $1 == "new" ] && [ $2 == "control" ]; then
        qumbianewcontrolwizard ${@:3}
elif [ $# -gt 0 ] && [ $1 == "ui" ] && [ $2 == "make" ]; then
        cuuimake  ${@:3}
elif [ $# -gt 0 ] && [ $1 == "client" ]; then
        qumbia-client ${@:2}
elif [ $# -gt 0 ] && [ $1 == "import" ] && [ $2 == "fast" ]; then
        qumbiaprojectwizard --from-qtango --fast ${@:3}
elif [ $# -gt 0 ] && [ $1 == "import" ]; then
        qumbiaprojectwizard --from-qtango ${@:2}

elif [ $# -gt 0 ] && [ $1 == "upgrade" ]; then
        if [ ! -r "$conf_f" ]; then
                echo -e "\n \e[1;31merror\e[0m: you can only upgrade an already installed cumbia version"
                echo -e " \e[1;31merror\e[0m: file \"$conf_f\" not found\n"
                echo -e "        You can cd into the cumbia-libs source directory and execute"
                echo -e "        \e[1;36mscripts/cubuild.sh srcupdate && scripts/cubuild.sh docs install\e[0m from there."
        else
                # the configuration file defines topdir with the path to the cumbia sources
                # execute the path/to/cumbia-libs/scripts/cubuild.sh   upgrade
                #
                . "$conf_f"   # read $srcdir
                $srcdir/scripts/cubuild.sh srcupdate && $srcdir/scripts/cubuild.sh clean docs build
                if [ "$?" -ne 0 ]; then
                    echo -e "\e[1;31m\n*\n* cumbia upgrade error\e[0m: failed to perform library upgrade \e[0;31m:(\n*\e[0m\n";
                else
                    echo -e "\e[1;32m\n*\e[0m library has been built successfully"
                    echo -e "\e[1;32m\n*\e[0m do you want to install the new version? (You need write permissions on the destination)"
                    echo -e "\e[1;32m\n*\e[0m [\e[1;32my\e[0m: yes | \e[1;35mn\e[0m: no | \e[1;32ms\e[0m: yes with \e[0;36msudo\e[0m] [y] ? "
                    read  -s -n 1 cuinstall
                    sudocmd=
                    if  [ "$cuinstall" == "s" ]; then
                        sudocmd=sudo
                        cuinstall="y"
                    fi
                    if [ "$cuinstall" != "y" ]  && [ "$cuinstall" != "" ]; then
                        echo -e "\e[1;35m\n*\e[0m installation cancelled\n\n"
                        echo -e "\e[1;35m*\e[0m You can perform the installation later executing \e[0;46;3m $srcdir/scripts/cubuild.sh install \e[0m\n\n"
                        exit 0
                    else
                        $sudocmd $srcdir/scripts/cubuild.sh install
                        if [ "$?" -ne 0 ]; then
                            echo -e "\e[1;31m\n*\n* cumbia upgrade error\e[0m: failed to install library into destination\n\e[1;31m*\e[0m\n\n"
                        fi
                    fi

                fi
        fi
else
        print_menu
        echo -e "\e[1;31;4mcumbia\e[0m: unrecognized command line arguments \"\e[1;31m$@\e[0m\"\n"
fi


